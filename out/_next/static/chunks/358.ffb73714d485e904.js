(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[358,646],{35796:function(d,b,a){"use strict";a.d(b,{d:function(){return e}});var c=a(45624);class e extends c.J5{async authenticateUser(){var b;if(!this.provider||!(null!==(b=this.chainConfig)&& void 0!==b&&b.chainId))throw c.RM.notConnectedError();const{chainNamespace:e,chainId:h}=this.chainConfig;if(this.status!==c.MP.CONNECTED)throw c.RM.notConnectedError("Not connected with wallet, Please login/connect first");const a=await this.provider.request({method:"eth_accounts"});if(a&&a.length>0){const d=(0,c.Cb)(a[0],this.name);if(d){const i=(0,c.$E)(d);if(!i)return{idToken:d}}const j={domain:window.location.origin,uri:window.location.href,address:a[0],chainId:parseInt(h,16),version:"1",nonce:Math.random().toString(36).slice(2),issuedAt:new Date().toISOString()},f=await (0,c.tV)(j,e),k=await this.provider.request({method:"personal_sign",params:[f,a[0]]}),g=await (0,c.rn)(e,k,f,this.name,this.sessionTime);return(0,c.Fr)(a[0],this.name,g),{idToken:g}}throw c.RM.notConnectedError("Not connected with wallet, Please login/connect first")}async disconnect(){if(this.status!==c.MP.CONNECTED)throw c.RM.disconnectionError("Not connected with wallet");const a=await this.provider.request({method:"eth_accounts"});a&&a.length>0&&(0,c.qz)(a[0],this.name)}}},43840:function(g,b,a){"use strict";a.r(b),a.d(b,{WalletConnectV1Adapter:function(){return n}});var h=a(4942),d=a(75426),i=a(74131);class e extends d.Z{constructor(a,b){super({cryptoLib:i,connectorOpts:a,pushServerOpts:b})}}var j=e,c=a(45624),f=a(35796),k=a(52062);const l=[{name:"Rainbow",chains:[c.EN.EIP155],logo:"https://images.web3auth.io/login-rainbow.svg",mobile:{native:"rainbow:",universal:"https://rnbwapp.com"},desktop:{native:"",universal:""}},{name:"MetaMask",chains:[c.EN.EIP155],logo:"https://images.web3auth.io/login-metamask.svg",mobile:{native:"metamask:",universal:"https://metamask.app.link"},desktop:{native:"",universal:""}}];function m(c,d){var a=Object.keys(c);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(c);d&&(b=b.filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})),a.push.apply(a,b)}return a}class n extends f.d{constructor(){let a=arguments.length>0&& void 0!==arguments[0]?arguments[0]:{};super(),(0,h.Z)(this,"name",c.rW.WALLET_CONNECT_V1),(0,h.Z)(this,"adapterNamespace",c.yk.EIP155),(0,h.Z)(this,"currentChainNamespace",c.EN.EIP155),(0,h.Z)(this,"type",c.hN.EXTERNAL),(0,h.Z)(this,"adapterOptions",void 0),(0,h.Z)(this,"status",c.MP.NOT_READY),(0,h.Z)(this,"adapterData",{uri:"",extensionAdapters:l}),(0,h.Z)(this,"connector",null),(0,h.Z)(this,"wcProvider",null),(0,h.Z)(this,"rehydrated",!1),this.adapterOptions=function(c){for(var a=1;a<arguments.length;a++){var b=null!=arguments[a]?arguments[a]:{};a%2?m(Object(b),!0).forEach(function(a){(0,h.Z)(c,a,b[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(c,Object.getOwnPropertyDescriptors(b)):m(Object(b)).forEach(function(a){Object.defineProperty(c,a,Object.getOwnPropertyDescriptor(b,a))})}return c}({},a),this.chainConfig=a.chainConfig||null,this.sessionTime=a.sessionTime||86400}get connected(){var a;return!!(null!==(a=this.connector)&& void 0!==a&&a.connected)}get provider(){var a;return(null===(a=this.wcProvider)|| void 0===a?void 0:a.provider)||null}set provider(a){throw new Error("Not implemented")}async init(){super.checkInitializationRequirements(),this.chainConfig||(this.chainConfig=(0,c.h2)(c.EN.EIP155,1)),this.connector=this.getWalletConnectInstance(),this.wcProvider=new k.WalletConnectProvider({config:{chainConfig:this.chainConfig},connector:this.connector}),this.emit(c.n2.READY,c.rW.WALLET_CONNECT_V1),this.status=c.MP.READY,c.cM.debug("initializing wallet connect v1 adapter"),this.connector.connected&&(this.rehydrated=!0,await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId}))}async connect(){if(super.checkConnectionRequirements(),!this.connector)throw c.Ty.notReady("Wallet adapter is not ready yet");if(this.connected)return await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId}),this.provider;if(this.status!==c.MP.CONNECTING){var a,b;null!==(a=this.adapterOptions.adapterSettings)&& void 0!==a&&a.qrcodeModal&&(this.connector=this.getWalletConnectInstance(),this.wcProvider=new k.WalletConnectProvider({config:{chainConfig:this.chainConfig,skipLookupNetwork:null===(b=this.adapterOptions.adapterSettings)|| void 0===b?void 0:b.skipNetworkSwitching},connector:this.connector})),await this.createNewSession(),this.status=c.MP.CONNECTING,this.emit(c.n2.CONNECTING,{adapter:c.rW.WALLET_CONNECT_V1})}return new Promise((d,b)=>{if(!this.connector)return b(c.Ty.notReady("Wallet adapter is not ready yet"));this.connector.on("modal_closed",async()=>(this.status=c.MP.READY,this.emit(c.n2.READY,c.rW.WALLET_CONNECT_V1),b(new Error("User closed modal"))));try{this.connector.on("connect",async(a,b)=>(a&&this.emit(c.n2.ERRORED,a),c.cM.debug("connected event emitted by web3auth"),await this.onConnectHandler(b.params[0]),d(this.provider)))}catch(a){c.cM.error("Wallet connect v1 adapter error while connecting",a),this.status=c.MP.READY,this.rehydrated=!0,this.emit(c.n2.ERRORED,a),b(a instanceof c.up?a:c.RM.connectionError("Failed to login with wallet connect: ".concat((null==a?void 0:a.message)||"")))}})}setAdapterSettings(a){this.status!==c.MP.READY&&null!=a&&a.sessionTime&&(this.sessionTime=a.sessionTime)}async getUserInfo(){if(!this.connected)throw c.RM.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async disconnect(){let a=arguments.length>0&& void 0!==arguments[0]?arguments[0]:{cleanup:!1};const{cleanup:b}=a;if(!this.connector||!this.connected)throw c.RM.notConnectedError("Not connected with wallet");await super.disconnect(),await this.connector.killSession(),this.rehydrated=!1,b?(this.connector=null,this.status=c.MP.NOT_READY,this.wcProvider=null):this.status=c.MP.READY,this.emit(c.n2.DISCONNECTED)}async addChain(b){try{var a;if(!this.wcProvider)throw c.Ty.notReady("Wallet adapter is not ready yet");const d=null===(a=this.adapterOptions.adapterSettings)|| void 0===a?void 0:a.networkSwitchModal;d&&await d.addNetwork({chainConfig:b,appOrigin:window.location.hostname}),await this.wcProvider.addChain(b)}catch(e){c.cM.error(e)}}async switchChain(e,b){var a;if(!this.wcProvider)throw c.Ty.notReady("Wallet adapter is not ready yet");const d=null===(a=this.adapterOptions.adapterSettings)|| void 0===a?void 0:a.networkSwitchModal;d&&await d.switchNetwork({currentChainConfig:b,newChainConfig:e,appOrigin:window.location.hostname}),await this.wcProvider.switchChain({chainId:b.chainId,lookup:!1,addChain:!1})}async createNewSession(){var a,b,d;let e=arguments.length>0&& void 0!==arguments[0]?arguments[0]:{forceNewSession:!1};if(!this.connector)throw c.Ty.notReady("Wallet adapter is not ready yet");if(e.forceNewSession&&this.connector.pending&&await this.connector.killSession(),null!==(a=this.adapterOptions)&& void 0!==a&&null!==(b=a.adapterSettings)&& void 0!==b&&b.qrcodeModal){await this.connector.createSession({chainId:parseInt((null===(d=this.chainConfig)|| void 0===d?void 0:d.chainId)||"0x1",16)});return}return new Promise((d,b)=>{var a;if(!this.connector)return b(c.Ty.notReady("Wallet adapter is not ready yet"));c.cM.debug("creating new session for web3auth wallet connect"),this.connector.on("display_uri",async(e,f)=>{var a;if(e)return this.emit(c.n2.ERRORED,c.RM.connectionError("Failed to display wallet connect qr code")),b(e);const g=f.params[0];return this.updateAdapterData({uri:g,extensionAdapters:l}),null===(a=this.connector)|| void 0===a||a.off("display_uri"),d()}),this.connector.createSession({chainId:parseInt((null===(a=this.chainConfig)|| void 0===a?void 0:a.chainId)||"0x1",16)}).catch(a=>(c.cM.error("error while creating new wallet connect session",a),this.emit(c.n2.ERRORED,a),b(a)))})}async onConnectHandler(h){if(!this.connector||!this.wcProvider)throw c.Ty.notReady("Wallet adapter is not ready yet");if(!this.chainConfig)throw c.Ty.invalidParams("Chain config is not set");const{chainId:a}=h;if(c.cM.debug("connected chainId in hex"),a!==parseInt(this.chainConfig.chainId,16)){var b,d,e;const f=(0,c.h2)(c.EN.EIP155,a)||{chainId:"0x".concat(a.toString(16)),displayName:"Unknown Network"},g=null===(b=this.adapterOptions.adapterSettings)|| void 0===b?void 0:b.qrcodeModal;if(!g||g&&!(null!==(d=this.adapterOptions)&& void 0!==d&&null!==(e=d.adapterSettings)&& void 0!==e&&e.skipNetworkSwitching))try{await this.addChain(this.chainConfig),await this.switchChain(f,this.chainConfig),this.connector=this.getWalletConnectInstance()}catch(i){c.cM.error("error while chain switching",i),await this.createNewSession({forceNewSession:!0}),this.emit(c.n2.ERRORED,c.Ty.fromCode(5e3,"Not connected to correct network. Expected: ".concat(this.chainConfig.displayName,", Current: ").concat((null==f?void 0:f.displayName)||a,", Please switch to correct network from wallet"))),this.status=c.MP.READY,this.rehydrated=!0;return}}await this.wcProvider.setupProvider(this.connector),this.subscribeEvents(this.connector),this.status=c.MP.CONNECTED,this.emit(c.n2.CONNECTED,{adapter:c.rW.WALLET_CONNECT_V1,reconnected:this.rehydrated})}subscribeEvents(a){a.on("session_update",async a=>{a&&this.emit(c.n2.ERRORED,a)})}getWalletConnectInstance(){const a=this.adapterOptions.adapterSettings||{};return a.bridge=a.bridge||"https://bridge.walletconnect.org",new j(a)}}},62859:function(){},75304:function(){},32772:function(){},64123:function(){},29704:function(){},88924:function(){}}])